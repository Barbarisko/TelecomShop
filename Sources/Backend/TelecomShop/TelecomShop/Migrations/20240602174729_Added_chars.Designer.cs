// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TelecomShop.DBModels;

#nullable disable

namespace TelecomShop.Migrations
{
    [DbContext(typeof(TelcoShopDBContext))]
    [Migration("20240602174729_Added_chars")]
    partial class Added_chars
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TelecomShop.DBModels.ActiveProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<int?>("BillingAccountId")
                        .HasColumnType("integer")
                        .HasColumnName("billing_account_id");

                    b.Property<int?>("ContractTerm")
                        .HasColumnType("integer")
                        .HasColumnName("contract_term");

                    b.Property<int?>("DataAmount")
                        .HasColumnType("integer")
                        .HasColumnName("data_amount");

                    b.Property<string>("ExtendedChars")
                        .HasColumnType("json")
                        .HasColumnName("extended_chars");

                    b.Property<int?>("ParentProductId")
                        .HasColumnType("integer")
                        .HasColumnName("parent_product_id");

                    b.Property<int?>("ProductId")
                        .HasColumnType("integer")
                        .HasColumnName("product_id");

                    b.Property<DateOnly>("PurchaceDate")
                        .HasColumnType("date")
                        .HasColumnName("purchace_date");

                    b.Property<int?>("SmsAmount")
                        .HasColumnType("integer")
                        .HasColumnName("sms_amount");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.Property<int?>("VoiceAmount")
                        .HasColumnType("integer")
                        .HasColumnName("voice_amount");

                    b.HasKey("Id")
                        .HasName("active_products_pk");

                    b.HasIndex("BillingAccountId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("active_products", (string)null);
                });

            modelBuilder.Entity("TelecomShop.DBModels.BillingAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<float?>("Balance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("real")
                        .HasColumnName("balance")
                        .HasDefaultValueSql("0.0");

                    b.Property<string>("Name")
                        .HasColumnType("character varying")
                        .HasColumnName("name");

                    b.Property<string>("Type")
                        .HasColumnType("character varying")
                        .HasColumnName("type");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("billing_accounts_pk");

                    b.HasIndex("UserId");

                    b.ToTable("billing_accounts", (string)null);
                });

            modelBuilder.Entity("TelecomShop.DBModels.CharInvolvement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<int?>("CharId")
                        .HasColumnType("integer")
                        .HasColumnName("char_id");

                    b.Property<string>("DefaultValue")
                        .HasColumnType("character varying")
                        .HasColumnName("default_value");

                    b.Property<string>("ListValues")
                        .HasColumnType("json")
                        .HasColumnName("list_values");

                    b.Property<int?>("ProductId")
                        .HasColumnType("integer")
                        .HasColumnName("product_id");

                    b.HasKey("Id")
                        .HasName("char_involvements_pk");

                    b.HasIndex("CharId");

                    b.HasIndex("ProductId");

                    b.ToTable("char_involvements", (string)null);
                });

            modelBuilder.Entity("TelecomShop.DBModels.Characteristic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<string>("DefaultValue")
                        .HasColumnType("character varying")
                        .HasColumnName("default_value");

                    b.Property<string>("Name")
                        .HasColumnType("character varying")
                        .HasColumnName("name");

                    b.Property<string>("Values")
                        .HasColumnType("json")
                        .HasColumnName("values");

                    b.HasKey("Id")
                        .HasName("characteristics_pk");

                    b.ToTable("characteristics", (string)null);
                });

            modelBuilder.Entity("TelecomShop.DBModels.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("ActiveFrom")
                        .HasColumnType("date")
                        .HasColumnName("active_from");

                    b.Property<DateOnly?>("ActiveTo")
                        .HasColumnType("date")
                        .HasColumnName("active_to");

                    b.Property<string>("Description")
                        .HasColumnType("character varying")
                        .HasColumnName("description");

                    b.Property<string>("DowngradeOptions")
                        .HasColumnType("json")
                        .HasColumnName("downgrade_options");

                    b.Property<string>("Name")
                        .HasColumnType("character varying")
                        .HasColumnName("name");

                    b.Property<int?>("ParentId")
                        .HasColumnType("integer")
                        .HasColumnName("parent_id");

                    b.Property<float?>("PriceOneTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("real")
                        .HasColumnName("price_one_time")
                        .HasDefaultValueSql("0.0");

                    b.Property<float?>("PriceOneTimeTotal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("real")
                        .HasColumnName("price_one_time_total")
                        .HasDefaultValueSql("0.0");

                    b.Property<float?>("PriceRecurrent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("real")
                        .HasColumnName("price_recurrent")
                        .HasDefaultValueSql("0.0");

                    b.Property<float?>("PriceRecurrentTotal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("real")
                        .HasColumnName("price_recurrent_total")
                        .HasDefaultValueSql("0.0");

                    b.Property<string>("Type")
                        .HasColumnType("character varying")
                        .HasColumnName("type");

                    b.Property<string>("UpgradeOptions")
                        .HasColumnType("json")
                        .HasColumnName("upgrade_options");

                    b.HasKey("Id")
                        .HasName("products_pk");

                    b.ToTable("products", (string)null);
                });

            modelBuilder.Entity("TelecomShop.DBModels.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<string>("Msisdn")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("msisdn");

                    b.Property<string>("Name")
                        .HasColumnType("character varying")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("password");

                    b.Property<string>("Surname")
                        .HasColumnType("character varying")
                        .HasColumnName("surname");

                    b.HasKey("Id")
                        .HasName("users_pk");

                    b.HasIndex(new[] { "Msisdn" }, "users_unique")
                        .IsUnique();

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("TelecomShop.DBModels.ActiveProduct", b =>
                {
                    b.HasOne("TelecomShop.DBModels.BillingAccount", "BillingAccount")
                        .WithMany("ActiveProducts")
                        .HasForeignKey("BillingAccountId")
                        .HasConstraintName("fk_active_products_billing_acc");

                    b.HasOne("TelecomShop.DBModels.Product", "Product")
                        .WithMany("ActiveProducts")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("fk_active_products_products");

                    b.HasOne("TelecomShop.DBModels.User", "User")
                        .WithMany("ActiveProducts")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("fk_active_products_users");

                    b.Navigation("BillingAccount");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TelecomShop.DBModels.BillingAccount", b =>
                {
                    b.HasOne("TelecomShop.DBModels.User", "User")
                        .WithMany("BillingAccounts")
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_billing_account_user");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TelecomShop.DBModels.CharInvolvement", b =>
                {
                    b.HasOne("TelecomShop.DBModels.Characteristic", "Char")
                        .WithMany("CharInvolvements")
                        .HasForeignKey("CharId")
                        .HasConstraintName("fk_char_involvements_chars");

                    b.HasOne("TelecomShop.DBModels.Product", "Product")
                        .WithMany("CharInvolvements")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("fk_char_involvements_ptoducts");

                    b.Navigation("Char");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("TelecomShop.DBModels.BillingAccount", b =>
                {
                    b.Navigation("ActiveProducts");
                });

            modelBuilder.Entity("TelecomShop.DBModels.Characteristic", b =>
                {
                    b.Navigation("CharInvolvements");
                });

            modelBuilder.Entity("TelecomShop.DBModels.Product", b =>
                {
                    b.Navigation("ActiveProducts");

                    b.Navigation("CharInvolvements");
                });

            modelBuilder.Entity("TelecomShop.DBModels.User", b =>
                {
                    b.Navigation("ActiveProducts");

                    b.Navigation("BillingAccounts");
                });
#pragma warning restore 612, 618
        }
    }
}
